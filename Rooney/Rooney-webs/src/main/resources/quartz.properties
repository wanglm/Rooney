#===============================================================       
#Configure Main Scheduler Properties
#集群名字相同，ID自动生成       
#===============================================================
org.quartz.scheduler.instanceName = myScheduler  
org.quartz.scheduler.instanceId = AUTO 
#===============================================================       
#Configure ThreadPool 
#线程池配置      
#=============================================================== 
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#初始化线程数量,不会动态增长
org.quartz.threadPool.threadCount =  20  
#线程优先级       
org.quartz.threadPool.threadPriority = 5 
#===============================================================       
#Configure JobStore       
#===============================================================  
#默认是JOB保存在内存，集群使用持久化的存储，此class由application管理事务
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#jdbc方言处理类，针对不同的数据库生成不同的sql，ORACLE有特别的处理类，还有针对低版本的weblogic的处理类
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#自定义数据源名字 ,不能和spring数据源同名，否则被覆盖
org.quartz.jobStore.dataSource = myDS 
#数据库表前缀
org.quartz.jobStore.tablePrefix = qrtz_ 
#集群必须
org.quartz.jobStore.isClustered = false 
#最大能忍受的触发超时时间，如果超过则认为“失误”
org.quartz.jobStore.misfireThreshold=60000
#scheduler的checkin时间，时间长短影响failure scheduler的发现速度
org.quartz.jobStore.clusterCheckinInterval=200
#===============================================================       
#Configure DataSource       
#===============================================================
org.quartz.dataSource.myDS.driver=com.mysql.jdbc.Driver
org.quartz.dataSource.myDS.URL=jdbc:mysql://localhost:3306/hadoop?useUnicode=true&amp;characterEncoding=utf-8
org.quartz.dataSource.myDS.user=root
org.quartz.dataSource.myDS.password=root
#建议最大的连接数最少为ThreadPool的threadCount,
#并且如果应用经常访问scheduler的API的话最好是有一些额外的connection，
#也就是说要比ThreadPool的worker threads大一些
org.quartz.dataSource.myDS.maxConnections=25
  
